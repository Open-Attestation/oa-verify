import { verificationBuilder } from "./verifiers/verificationBuilder";
import { Verifier } from "./types/core";
import { openAttestationHash } from "./verifiers/documentIntegrity/hash/openAttestationHash";
import { isValid } from "./validator";
import { openAttestationEthereumTokenRegistryStatus } from "./verifiers/documentStatus/tokenRegistry";
import { openAttestationEthereumDocumentStoreStatus } from "./verifiers/documentStatus/documentStore";
import { openAttestationDidSignedDocumentStatus } from "./verifiers/documentStatus/didSigned";
import { openAttestationDnsTxtIdentityProof } from "./verifiers/issuerIdentity/dnsTxt";
import { openAttestationDidIdentityProof } from "./verifiers/issuerIdentity/did";
import { openAttestationDnsDidIdentityProof } from "./verifiers/issuerIdentity/dnsDid";
import { createResolver } from "./did/resolver";
import { getIdentifier } from "./getIdentifier";
import * as utils from "./common/utils";
declare const openAttestationVerifiers: (Verifier<import("./verifiers/documentIntegrity/hash/openAttestationHash.type").OpenAttestationHashVerificationFragment> | Verifier<import("./verifiers/documentStatus/tokenRegistry/ethereumTokenRegistryStatus.type").OpenAttestationEthereumTokenRegistryStatusFragment> | Verifier<import("./verifiers/documentStatus/documentStore/ethereumDocumentStoreStatus.type").OpenAttestationEthereumDocumentStoreStatusFragment> | Verifier<import("./verifiers/documentStatus/didSigned/didSignedDocumentStatus.type").OpenAttestationDidSignedDocumentStatusVerificationFragment> | Verifier<import("./verifiers/issuerIdentity/dnsTxt/openAttestationDnsTxt.type").OpenAttestationDnsTxtIdentityProofVerificationFragment> | Verifier<import("./verifiers/issuerIdentity/dnsDid/dnsDidProof.type").OpenAttestationDnsDidIdentityProofVerificationFragment>)[];
declare const verify: (document: import("./types/core").DocumentsToVerify, promisesCallback?: import("./types/core").PromiseCallback | undefined) => Promise<import("./types/core").VerificationFragment[]>;
export * from "./types/core";
export * from "./verifiers/documentIntegrity/hash/openAttestationHash.type";
export * from "./verifiers/documentStatus/didSigned/didSignedDocumentStatus.type";
export * from "./verifiers/documentStatus/documentStore/ethereumDocumentStoreStatus.type";
export * from "./verifiers/documentStatus/tokenRegistry/ethereumTokenRegistryStatus.type";
export * from "./verifiers/issuerIdentity/did/didIdentityProof.type";
export * from "./verifiers/issuerIdentity/dnsDid/dnsDidProof.type";
export * from "./verifiers/issuerIdentity/dnsTxt/openAttestationDnsTxt.type";
export * from "./types/error";
export * from "./common/error";
export { verificationBuilder, openAttestationVerifiers, isValid, verify, Verifier, openAttestationHash, openAttestationEthereumDocumentStoreStatus, openAttestationEthereumTokenRegistryStatus, openAttestationDidSignedDocumentStatus, openAttestationDnsTxtIdentityProof, openAttestationDnsDidIdentityProof, openAttestationDidIdentityProof, createResolver, getIdentifier, utils, };
