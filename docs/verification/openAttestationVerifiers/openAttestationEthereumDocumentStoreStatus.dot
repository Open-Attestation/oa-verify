digraph G {

    node [style=filled];
    label = "openAttestationHash.ts"

  subgraph cluster_1 {

    label = "test"

    start_test [label="Start"]
    valid_test [label= "Valid" URL="https://github.com/Open-Attestation/oa-verify/blob/080d82ed7223a1f29d7b8fee6e3f3e466c72227c/src/verifiers/documentIntegrity/hash/openAttestationHash.ts#L28"];
    v2 [label="v2"]
    v3 [label="v3"]
    invalid_test [label= "Skipped"];
    
    start_test -> v2 [label="isWrappedV2Document"];
    start_test -> v3 [label="isWrappedV3Document"];
    v2 -> valid_test [label="issuer of documentStore or certificateStore"];
    v2 -> invalid_test
    v3 -> valid_test [label="proof of documentStore"];
    v3-> invalid_test
    start_test -> invalid_test [label="Neither"];
  }

  subgraph cluster_2 {

    label = "verify"

    start_verify [label="Start"]
    valid [label= "Valid"];
    invalid [label= "Invalid"];
    isIssuedOnDocumentStore [label="isIssuedOnDocumentStore" URL=""];
    isRevokedOnDocumentStore [label="isRevokedOnDocumentStore" URL=""];
    
    
    valid_test -> start_verify;
    start_verify -> verify;
    verify -> isIssuedOnDocumentStore;
    isIssuedOnDocumentStore -> isRevokedOnDocumentStore [label="merkleRoot issued"];
    isIssuedOnDocumentStore -> invalid
    isRevokedOnDocumentStore -> valid [label="Unrevoked"];
    isRevokedOnDocumentStore -> invalid
    
  }

  subgraph cluster_3 {

    label = "skip"
    invalid_test -> skip;
  }

}